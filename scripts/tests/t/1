#####
#
# Test One: Add some volumes including affinity graphs and then
# compare if the volumes are the same. Mesh the volume as well.
#
# $SUCCESS is set like: $SUCCESS = "something"; in the prep and
# finish sections.
#
# The cmd section is a command file sutable for running by omni
# in a headless manner.
#
# Expressions of the form {$VARNAME} are interpolated from a list
# of autogenerated variables, and are then replaced with the actual
# values in the string prior to execution of each phase.
#
# For example in the case of this test, because the file is "1",
# {$TESTNAME} will be replaced with a "1" prior to omni being
# executed.
#
# {$OUTDIR} will usually be a newly created dir for each run of
# the test.
#
# {$DATADIR} will usually be hard coded to point to someplace like:
# /home/buildbox/data/
#
#####

# The test data
%OMNITEST = (
	'prep' => '$SUCCESS = files_copy_omni("{$DATADIR}/{$TESTNAME}-reference1.omni",
					"{$OUTDIR}/{$TESTNAME}.omni");'
		,
	'cmd' => '
open:{$OUTDIR}/{$TESTNAME}.omni
loadHDF5seg:{$DATADIR}1.h5
loadHDF5chann:{$DATADIR}1.h5
loadHDF5affgraph:{$DATADIR}1.h5
compareSegs:1,2
compareChanns:1,2
quit
		'
		,
	'finish' => '$SUCCESS = files_exist_omni("{$OUTDIR}/{$TESTNAME}.omni") && sane();'
		,
        'markup' => '$MARKUP = start_html("Test: {$TESTNAME}").
                                        h1("Test: {$TESTNAME} ".result()).
                                                "<a href=\"{$OUTDIR}/{$TESTNAME}.omni.files\">resultant omni</a>".
                               end_html();'

);

1; # Perl requires truth in evaluation so it is possible to add additional sanity checks here.
#  # EOF
