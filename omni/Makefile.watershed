MATLAB		=	/usr/local/matlab_2009a
HERE    	=       $(shell pwd)
BINDIR		=	_bin
GENDIR		=	_gen
LIBDIR		=	$(BINDIR)/_libs
MATLABDIR 	=	matlab
AT	=	@
DOLLAR  = 	$$

CD	=	$(AT)cd
CP	=	$(AT)cp
ECHO	=	@echo
CAT	=	$(AT)cat
IF	=	$(AT)if
LN	=	$(AT)ln
MKDIR	=	$(AT)mkdir
MV	=	$(AT)mv
SED	=	$(AT)sed
RM	=	$(AT)rm
TOUCH	=	$(AT)touch
CHMOD	=	$(AT)chmod
DATE    =       $(AT)date
PERL	=	$(AT)perl
MEX	=	$(AT)$(MATLAB)/bin/mex
THRIFT	=	$(ZBINDIR)/thrift
AR	=	$(AT)ar
ARFLAGS	=	rcs
RUN     =       $(AT)$(RUNPREFIX);


ZMAKE	=	$(AT)./zmake
CC	=	$(AT)gcc
CXX	=	$(AT)g++
FPIC	=	-fPIC

FLEX    =       $(AT)./$(BINDIR)/external/flex/flex
BYACC   =       $(AT)./$(BINDIR)/external/byacc/byacc


THRIFT_AT	=	$(AT)$(THRIFT)

MEX_INCLUDE_DIR =       /usr/local/matlab_2009a/extern/include

INCLUDES	=	-I$(HERE) -I. -I$(GENDIR) -I$(MEX_INCLUDE_DIR) -I$(ZINCDIR) \
			-I$(HERE)/src/zi -I$(HERE)/include/zi_lib -I$(HERE)/src -I$(HERE)/../external/headers/boost_1_43_0/
CXX_INCLUDES	=	$(INCLUDES)
MEX_INCLUDES    =       $(INCLUDES)

CWARN		=	-Wall -Wno-sign-compare -Wno-unused-variable
CXXWARN		=	$(CWARN) -Wno-deprecated -Woverloaded-virtual

CPP_DEPFLAGS		=	-MM -MG -MP $(CXX_INCLUDES) -MT "$(@:.d=.o)"
CPP_INLINE_DEPFLAGS	=	-MMD -MP -MT "$(@)" -MF $(@:.o=.T)
COMMON_CFLAGS		=	-c -g -std=gnu99 -D_GNU_SOURCE=1 \
				-D_REENTRANT $(CPP_INLINE_DEPFLAGS) \
				$(INCLUDES) $(FPIC) $(CWARN) \
				-DZGRADER_TEST_PATH=$(HERE)/$(BINDIR)

COMMON_CXXFLAGS		=	-c -g $(CPP_INLINE_DEPFLAGS) $(CXX_INCLUDES) \
				$(FPIC) $(CXXWARN) \
				-DZGRADER_TEST_PATH=$(HERE)/$(BINDIR) \
				-D__cplusplus

DBG_CFLAGS		=	$(COMMON_CFLAGS) -DDEBUG_MODE=1
DBG_CXXFLAGS		=	$(COMMON_CXXFLAGS) -DDEBUG_MODE=1
OPTIMIZATION_FLAGS	=	-O3
OPT_CFLAGS		=	$(COMMON_CFLAGS) -DNDEBUG \
				$(OPTIMIZATION_FLAGS) -fno-omit-frame-pointer
OPT_CXXFLAGS		=	$(COMMON_CXXFLAGS) -DNDEBUG \
				$(OPTIMIZATION_FLAGS) -fno-omit-frame-pointer
COMMON_LDFLAGS		=	-g $(FPIC) -Wl,--eh-frame-hdr -L$(ZLIBDIR) -lm
DBG_LDFLAGS		=	$(COMMON_LDFLAGS)
OPT_LDFLAGS		=	$(COMMON_LDFLAGS) -O3 -fno-omit-frame-pointer

COMM_FLEX_FLAGS         =       -d
OPT_FLEXFLAGS           =       $(COMM_FLEX_FLAGS)
DBG_FLEXFLAGS           =       $(COMM_FLEX_FLAGS) -t

MEX_LIB_DIR             =       $(MATLAB)/bin/glnxa64
MEX_FLAGS               =       $(MEX_INCLUDES) -L$(ZLIBDIR) -L$(MEX_LIB_DIR) -cxx

ifneq ($(strip $(OPT)),)
  CFLAGS	=	$(OPT_CFLAGS)
  CXXFLAGS	=	$(OPT_CXXFLAGS)
  LDFLAGS	=	$(OPT_LDFLAGS) $(EXTRA_LDFLAGS)
  FLEXFLAGS     =       $(OPT_FLEXFLAGS)
else
  CFLAGS	=	$(DBG_CFLAGS)
  CXXFLAGS	=	$(DBG_CXXFLAGS)
  LDFLAGS	=	$(DBG_LDFLAGS) $(EXTRA_LDFLAGS)
  FLEXFLAGS     =       $(DBG_FLEXFLAGS)
endif


# dependency files for c++
$(BINDIR)/%.d: %.cpp
	$(MKDIR) -p $(dir $@)
	$(CXX) $(CPP_DEPFLAGS) -MF $@ $<

# dependency files for c++
$(BINDIR)/%.d: %.cc
	$(MKDIR) -p $(dir $@)
	$(CXX) $(CPP_DEPFLAGS) -MF $@ $<

# dependency files for c
$(BINDIR)/%.d: %.c
	$(MKDIR) -p $(dir $@)
	$(CC) $(CPP_DEPFLAGS) -MF $@ $<

# c++
$(BINDIR)/%.o: %.cpp
	$(ECHO) "[\033[01;34mCXX\033[22;37m] compiling $<"
	$(MKDIR) -p $(dir $@)
	$(CXX) $(CXXFLAGS) -I$(GENDIR)/$(dir $<) -o $@ $<
	$(MV) -f "$(@:.o=.T)" "$(@:.o=.d)"

# c++
$(BINDIR)/%.o: %.cc
	$(ECHO) "[\033[01;34mCXX\033[22;37m] compiling $<"
	$(MKDIR) -p $(dir $@)
	$(CXX) $(CXXFLAGS) -I$(GENDIR)/$(dir $<) -o $@ $<
	$(MV) -f "$(@:.o=.T)" "$(@:.o=.d)"

# c
$(BINDIR)/%.o: %.c
	$(ECHO) "[\033[01;34mCC\033[22;37m]  compiling $<"
	$(MKDIR) -p $(dir $@)
	$(CC) $(CFLAGS) -o $@ $<
	$(MV) -f "$(@:.o=.T)" "$(@:.o=.d)"

# for generated c
$(BINDIR)/%.o: $(GENDIR)/%.c
	$(ECHO) "[\033[01;34mCC\033[22;37m]  compiling $<"
	$(MKDIR) -p $(dir $@)
	$(CC) $(CFLAGS) -I$(patsubst $(GENDIR)/%,%,$(dir $<)) -o $@ $<
	$(MV) -f "$(@:.o=.T)" "$(@:.o=.d)"

# for generated c++
$(BINDIR)/%.o: $(GENDIR)/%.cpp
	$(ECHO) "[\033[01;34mCXX\033[22;37m] compiling $<"
	$(MKDIR) -p $(dir $@)
	$(CXX) $(CXXFLAGS) -I$(patsubst $(GENDIR)/%,%,$(dir $<)) -o $@ $<
	$(MV) -f "$(@:.o=.T)" "$(@:.o=.d)"


.PHONY: all
all:

.PHONY: tidy
tidy:
	$(ECHO) Tidy...
	$(AT)touch ./tmp.tmp~
	$(AT)touch ./tmp.tmp#
	$(AT)find | grep "~$$" | xargs rm -rf
	$(AT)find | grep "~#" | xargs rm -rf

ZMAKE_FILES	= watershed/mex

########
# Rules
########


.PHONY: all
all:

.PHONY: clean
clean:
	$(ECHO) Cleaning...
	$(RM) -rf $(BINDIR) $(GENDIR)

.PHONY: remake
remake: clean all

.PHONY: runtests
runtests:


$(BINDIR)/src/zi/watershed/liblibRawWatershed.a: $(BINDIR)/src/zi/watershed/RawQuickieWS.o
	$(ECHO) "[\033[01;32mCXX\033[22;37m] building  $(BINDIR)/src/zi/watershed/liblibRawWatershed.a"
	$(MKDIR) -p $(BINDIR)/src/zi/watershed/lib
	$(AR) $(ARFLAGS) $(BINDIR)/src/zi/watershed/liblibRawWatershed.a $(BINDIR)/src/zi/watershed/RawQuickieWS.o



$(BINDIR)/src/zi/watershed/QuickieWS.mexa64: $(BINDIR)/src/zi/watershed/liblibRawWatershed.a src/zi/watershed/QuickieWS.cpp
	$(ECHO) "(CXX) mexing    $(BINDIR)/src/zi/watershed/QuickieWS.mexa64"
	$(MKDIR) -p $(BINDIR)/src/zi/watershed/mex
	$(MEX) $(MEX_FLAGS) -outdir $(BINDIR)/src/zi/watershed/mex  $(BINDIR)/src/zi/watershed/liblibRawWatershed.a src/zi/watershed/QuickieWS.cpp -lrt


all: $(BINDIR)/src/zi/watershed/QuickieWS.mexa64
